name: CI

on:
  push:
    branches:
    - main
  pull_request:
    branches:
      - main
jobs:
  build:
    #services:
      # sqlserver:
      #   image: mcr.microsoft.com/mssql/server:2022-latest
      #   env:
      #     ACCEPT_EULA: Y
      #     MSSQL_PID: Developer
      #     MSSQL_SA_PASSWORD: ${{ vars.MSSQL_SA_PASSWORD }}
      #   ports:
      #     - 1433:1433
      #   # options: >-
      #   #   --health-cmd "/opt/mssql-tools/bin/sqlcmd -U sa -P \"${MSSQL_SA_PASSWORD}\" -Q \"SELECT 1\""
      #   #   --health-interval 10s
      #   #   --health-timeout 5s
      #   #   --health-retries 5
      #   volumes:
      #     - /sample/ContosoUniversity/App_Data/runAfterCreateDatabase/:/var/opt/mssql/scripts
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Install SQL Server
      uses: potatoqualitee/mssqlsuite@v1.8
      with:
        install: sqlengine, sqlclient//, localdb
        sa-password: ${{ vars.MSSQL_SA_PASSWORD }}
    - name: Provision the database
      run: sqlcmd -S localhost -U sa -P ${{ vars.MSSQL_SA_PASSWORD }} -Q "CREATE DATABASE [ContosoUniversity]" -C
    - name: Initialize schema
      run: sqlcmd -S localhost -U sa -P ${{ vars.MSSQL_SA_PASSWORD }} -d "ContosoUniversity" -i "${{ github.workspace }}/sample/ContosoUniversity/App_Data/runAfterCreateDatabase/0001_InitialSchema.sql" -C
    - name: Setup dotnet 6.0
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '6.0.x'
    - name: Setup dotnet 8.0
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.100'
    - name: Build and Test
      run: ./Build.ps1
      shell: pwsh
    - name: Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: artifacts
        path: artifacts/**/*